{"version":3,"sources":["utils/socket.js","logo.svg","components/PlayCard.jsx","components/DrawingPad.jsx","store/actions/room.js","components/ChatContainer.jsx","components/CustomButton.jsx","screens/HomeScreen.jsx","models/Room.js","components/RoomCreateModal.jsx","components/Table.jsx","components/LobbyInfoContainer.jsx","store/actions/player.js","screens/GameLobbyScreen.jsx","store/reducers/room.js","store/dummy-data.js","store/reducers/player.js","App.js","reportWebVitals.js","index.js"],"names":["Socket","_instance","this","socket","io","player","emit","JSON","stringify","room","roomid","drawings","PlayerCard","props","isEditingMessage","isEditing","bgColor","className","style","backgroundColor","Image","src","a","rounded","score","color","name","Tools","require","fabric","render","DisplayedCanvas","position","width","height","zIndex","ref","c","passCanvasHandler","DrawingPad","forwardRef","useState","canUndo","setCanUndo","canRedo","setCanRedo","lineColor","setLineColor","lineWidth","controlledValue","tool","setTool","selectedRoom","useSelector","state","find","v","id","_sketch","useRef","initialValue","useEffect","fromJSON","_onMouseDown","useImperativeHandle","_clear","clear","setBackgroundFromDataUrl","console","save","data","filename","undefined","blob","Blob","type","e","document","createEvent","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","join","initMouseEvent","dispatchEvent","error","styles","toolbar","display","variant","flexGrow","currentQuestion","question","IconButton","disabled","onClick","undo","err","log","redo","localStorage","setItem","toJSON","location","toDataURL","replace","textAlign","hint","fillColor","defaultValue","value","forceValue","onChange","prev","now","onDraw","padding","justifyContent","FormControl","InputLabel","Select","labelId","label","target","map","MenuItem","hex","border","boxShadow","GET_ALL_ROOM","JOIN_ROOM","GAME_STATE","ROUND_STATE","createNewRoomSocket","dispatch","createOrJoin","leaveRoom","ChatContainer","guessText","setGuessText","messages","setMessages","useDispatch","on","parse","b","i","push","textColor","fontSize","wordBreak","borderRadius","sender","message","TextField","onKeyDown","keyCode","sendMessage","CustomButton","Button","borderWidth","children","HomeScreen","getItem","setInitialValue","gameState","setGameState","timeLeft","setTimeLeft","setIsEditing","backDrop","setBackDrop","getInstance","drawingPadRef","currentIn","history","useHistory","round_state","prepare","players","owner","current","roundTimer","onStart","startGame","onPrepare","onExit","Promise","resolve","setTimeout","goBack","PrepareContainer","currentUser","isOwner","opacity","left","transform","top","Backdrop","open","CircularProgress","val","points","Room","timeLimit","maxPlayer","addPlayer","p","forEach","isFull","alert","total","prepareTimer","interval","setInterval","clearInterval","gameTimer","gameLoop","start","totalRound","filter","length","index","starts","isPlaying","curRound","PREPARE","INGAME","timeRange","personLimits","RoomCreateModal","roomName","setRoomName","roomPassord","setRoomPassword","setTimeLimit","personLimit","setPersonLimit","isShow","setIsShow","promiseInfo","setPromiseInfo","show","reject","placeholder","select","helperText","Table","joinHandler","LobbyInfoContainer","aButtonText","setAButtonText","createRoom","showAvailableRooms","columns","minWidth","align","TableContainer","minHeight","stickyHeader","aria-label","size","TableHead","TableRow","column","TableCell","TableBody","row","hover","role","tabIndex","format","code","GET_ALL_PLAYERS","GameLobbyScreen","modalRef","setShowAvailableRooms","cancel","setCancel","allRooms","allPlayers","rooms","getAllRoom","jointRoom","waitJoinRoom","createdRoom","modal","result","uuidv4","joinRoom","curPlayers","renderRoom","rrrrr","getAllRooms","getAllRoomsSocket","Snackbar","anchorOrigin","vertical","horizontal","ContentProps","initialState","roomReducer","action","playerReducer","onConnect","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","App","exact","path","to","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.994b1a3a.chunk.js","sourcesContent":["import { io } from \"socket.io-client\";\n\n//const END_POINT = \"http://localhost:8000\";\nconst END_POINT = \"https://vast-bastion-79619.herokuapp.com/\"\n\nclass Socket {\n  constructor() {\n    if (!!Socket._instance) {\n      return Socket._instance;\n    }\n\n    Socket._instance = this;\n\n    this.socket = io(END_POINT);\n\n    \n    return this;\n  }\n\n  static getInstance() {\n    return this._instance;\n  }\n\n  onConnect(player) {\n    this.socket.emit(\"onConnect\", JSON.stringify(player));\n  }\n\n  createOrJoin(room) {\n      this.socket.emit(\"createRoom\", JSON.stringify(room));\n  }\n  getAllRooms() {\n      this.socket.emit(\"allRooms\");\n  }\n  startGame(roomid) {\n      this.socket.emit(\"startGame\", roomid);\n  }\n  onDraw(roomid, drawings) {\n    this.socket.emit(\"onDraw\", roomid, drawings);\n  }\n}\n\nexport default Socket;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport \"./PlayCard.css\";\nimport a from \"../logo.svg\";\nconst PlayerCard = (props) => {\n    //f6dfeb\n\n    const isEditingMessage = props.isEditing === null ? \"\" : props.isEditing ? \"Editing\":  \"Guessing\"\n    const bgColor = props.isEditing ? '#a1cae2' :'white';\n  return (\n    <div className=\"PlayCard\" style={{ ...props.style, backgroundColor:bgColor}}>\n      <Image src={a} rounded className=\"playcard-imageholder\" />\n      <div className=\"information\">\n        <div>{props.score}</div>\n        <div style={{ color: \"orange\" }}>{props.name}</div>\n        <div>{isEditingMessage}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerCard;\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { SketchField } from \"react-sketch\";\nimport Toolbar from \"@material-ui/core/Toolbar/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { CompactPicker, CirclePicker } from \"react-color\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CopyIcon from \"@material-ui/icons/FileCopy\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { useSelector } from \"react-redux\";\nimport {\n  FormControl,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\n// select icons\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport Crop75Icon from \"@material-ui/icons/Crop75\";\nconst fabric = require(\"fabric\").fabric;\n\nconst Tools = [\n  {\n    name: \"pencil\",\n    render: <CreateIcon />,\n  },\n  {\n    name: \"circle\",\n    render: <RadioButtonUncheckedIcon />,\n  },\n  {\n    name: \"arrow\",\n    render: <ArrowForwardIcon />,\n  },\n  {\n    name: \"line\",\n    render: <RemoveIcon />,\n  },\n  {\n    name: \"rectangle\",\n    render: <Crop75Icon />,\n  },\n];\n\nconst DisplayedCanvas = (props) => {\n  return (\n    <div style={{ ...props.style }}>\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: \"transparent\",\n          zIndex: 3,\n        }}\n      />\n      <div\n        style={{\n          zIndex: 2,\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <SketchField\n          height={700}\n          ref={(c) => {\n            props.passCanvasHandler(c);\n          }}\n        ></SketchField>\n      </div>\n    </div>\n  );\n};\n\nconst DrawingPad = forwardRef((props, ref) => {\n  const [canUndo, setCanUndo] = useState(false);\n  const [canRedo, setCanRedo] = useState(false);\n  const [lineColor, setLineColor] = useState(\"black\");\n  const [lineWidth, setLineWidth] = useState(10);\n  const [controlledValue, setControlledValue] = useState(null);\n  const [tool, setTool] = useState(Tools[0].name);\n  const { isEditing, roomid } = props;\n\n  const selectedRoom = useSelector((state) => {\n    return state.room.room.find((v) => v.id === roomid);\n  });\n\n  const refs = useRef(null);\n  var _sketch = null;\n  // props from parent\n  const { initialValue } = props;\n  // update canvas for thoes who are guessing\n  useEffect(() => {\n    _sketch.fromJSON(initialValue);\n    _sketch._onMouseDown = () => {};\n  }, [initialValue, _sketch]);\n\n  // handle update to database\n  //  useEffect( () => {\n  //   try {\n  //      db.ref(\"canvas\").push({\n  //       content: _sketch.toJSON(),\n  //       timestamp: Date.now(),\n  //       uid: \"sss\"\n  //     })\n  //   } catch (error) {\n  //     alert(error);\n  //   }\n  // },[_sketch])\n\n  const _selectTool = (v) => {\n    setTool(v.target.value);\n  };\n  const _undo = () => {\n    try {\n      _sketch.undo();\n      setCanUndo(_sketch.canUndo());\n      setCanRedo(_sketch.canRedo());\n    } catch (err) {\n      console.log(\"undo error\", err);\n    }\n  };\n\n  const _redo = () => {\n    try {\n      _sketch.redo();\n      setCanUndo(_sketch.canUndo());\n      setCanRedo(_sketch.canRedo());\n    } catch (err) {\n      console.log(\"redo error\", err);\n    }\n  };\n\n  const _save = () => {\n    localStorage.setItem(\"1111\", JSON.stringify(_sketch.toJSON()));\n  };\n\n  useImperativeHandle(ref, () => ({\n    _clear: _clear,\n  }));\n\n  const _download = () => {\n    //console.save(_sketch.toDataURL(), 'toDataURL.txt');\n    //console.save(JSON.stringify(_sketch.toJSON()), 'toDataJSON.txt');\n\n    /*eslint-enable no-console*/\n    window.location.href = _sketch\n      .toDataURL()\n      .replace(\"image/png\", \"image/octet-stream\");\n    // imgDown.href = _sketch.toDataURL();\n    // imgDown.download = 'toPNG.png';\n    // imgDown.dispatchEvent(event);\n  };\n\n  const _clear = () => {\n    _sketch.clear();\n    _sketch.setBackgroundFromDataUrl(\"\");\n\n    setCanUndo(_sketch.canUndo)\n    setCanRedo(_sketch.canRedo());\n  };\n\n  const _onSketchChange = (e) => {\n    // console.log(isEditing);\n    try {\n      let prev = canUndo;\n      let now = _sketch.canUndo();\n      props.onDraw(JSON.stringify(_sketch.toJSON()));\n      if (prev !== now) {\n        setCanUndo(now);\n      }\n    } catch (err) {}\n  };\n\n  const passCanvasHandler = (c) => {\n    _sketch = c;\n  };\n\n  useEffect(() => {\n    (function (console) {\n      console.save = function (data, filename) {\n        if (!data) {\n          console.error(\"Console.save: No data\");\n          return;\n        }\n        if (!filename) filename = \"console.json\";\n        if (typeof data === \"object\") {\n          data = JSON.stringify(data, undefined, 4);\n        }\n        var blob = new Blob([data], { type: \"text/json\" }),\n          e = document.createEvent(\"MouseEvents\"),\n          a = document.createElement(\"a\");\n        a.download = filename;\n        a.href = window.URL.createObjectURL(blob);\n        a.dataset.downloadurl = [\"text/json\", a.download, a.href].join(\":\");\n        e.initMouseEvent(\n          \"click\",\n          true,\n          false,\n          window,\n          0,\n          0,\n          0,\n          0,\n          0,\n          false,\n          false,\n          false,\n          false,\n          0,\n          null\n        );\n        a.dispatchEvent(e);\n      };\n    })(console);\n  }, []);\n\n  return (\n    <div>\n      <div height=\"10%\">\n        {isEditing ? (\n          <Toolbar style={{ ...styles.toolbar, display: isEditing }}>\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              style={{ flexGrow: 1, color: \"orange\" }}\n            >\n              {selectedRoom && selectedRoom.currentQuestion.question}\n            </Typography>\n            <IconButton color=\"primary\" disabled={!canUndo} onClick={_undo}>\n              <UndoIcon />\n            </IconButton>\n            <IconButton color=\"primary\" disabled={!canRedo} onClick={_redo}>\n              <RedoIcon />\n            </IconButton>\n            <IconButton color=\"primary\" onClick={_save}>\n              <SaveIcon />\n            </IconButton>\n            <IconButton color=\"primary\" onClick={_download}>\n              <DownloadIcon />\n            </IconButton>\n            <IconButton color=\"primary\" onClick={_clear}>\n              <DeleteIcon />\n            </IconButton>\n          </Toolbar>\n        ) : (\n          <Toolbar\n            style={{\n              ...styles.toolbar,\n              display: !isEditing,\n              textAlign: \"center\",\n            }}\n          >\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              style={{ flexGrow: 1, color: \"orange\" }}\n            >\n              {selectedRoom && `提示 : ${selectedRoom.currentQuestion.hint}`}\n            </Typography>\n            <IconButton color=\"primary\" onClick={_clear}>\n              <DeleteIcon />\n            </IconButton>\n          </Toolbar>\n        )}\n      </div>\n\n      <div height=\"80%\">\n        {isEditing ? (\n          <SketchField\n            name=\"sketch\"\n            className=\"canvas-area\"\n            ref={(c) => (_sketch = c)}\n            lineColor={lineColor}\n            lineWidth={lineWidth}\n            fillColor={\"transparent\"}\n            height={630}\n            backgroundColor={\"transparent\"}\n            defaultValue={initialValue}\n            value={controlledValue}\n            forceValue\n            onChange={_onSketchChange}\n            tool={tool}\n          />\n        ) : (\n          <DisplayedCanvas\n            style={{ width: \"100%\", height: 630 }}\n            passCanvasHandler={passCanvasHandler}\n          />\n        )}\n      </div>\n      {isEditing ?\n      <div>\n        <Toolbar\n          style={{\n            ...styles.toolbar,\n            backgroundColor: 'lightgray',\n            zIndex: 4,\n            display: \"flex\",\n            padding: 5,\n            justifyContent: \"space-around\",\n          }}\n        >\n          <FormControl variant=\"outlined\" style={{ width: \"20%\" }}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              tools\n            </InputLabel>\n\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={tool}\n              label=\"Age\"\n              onChange={_selectTool}\n            >\n              {Tools.map((v) => {\n                return (\n                  <MenuItem value={v.name} key={v.name}>\n                    <div style={{ display: \"flex\" }}>\n                      {v.render} {v.name}\n                    </div>\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n\n          <CirclePicker\n            id=\"lineColor\"\n            color={lineColor}\n            onChange={(color) => setLineColor(color.hex)}\n            width=\"50%\"\n          />\n        </Toolbar>\n      </div> : null}\n    </div>\n  );\n});\n\nconst styles = {\n  toolbar: {\n    backgroundColor: \"#333\",\n    border: \"solid 1px\",\n    boxShadow: `0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)`,\n  },\n};\n\nexport default DrawingPad;\n\n// console.log(localStorage.getItem(\"1111\"));\n","export const GET_ALL_ROOM = \"GET_ALL_ROOM\";\nexport const JOIN_ROOM = \"JOIN_ROOM\";\nexport const GAME_STATE = {\n  PREPARE: \"PREPARE\",\n  INGAME: \"INGAME\",\n  FINISH: \"FINISH\",\n};\n\nexport const ROUND_STATE = {\n  PREPARE: \"PREPARE\",\n  DRAWING: \"DRAWING\",\n};\n\nexport const getAllRoom = (rooms) => {\n  return {\n    type: GET_ALL_ROOM,\n    rooms: rooms,\n  };\n};\n\nexport const jointRoom = (room) => {\n  return {\n    type: JOIN_ROOM,\n    room:room\n  }\n}\n\n/***************************************************************************************** */\n/* Async Action items using - Sockets\t\t\t\t\t\t\t\t\t\t\t\t\t   */\n/***************************************************************************************** */\nexport const createNewRoomSocket = (socket, room) => {\n  return (dispatch) => {\n    socket.createOrJoin(room);\n  };\n};\n\nexport const getAllRoomsSocket = (socket) => {\n  return (dispatch) => {\n    socket.getAllRooms();\n  };\n};\n\nexport const startGame = (socket, roomid) => {\n  return (dispatch) => {\n    socket.startGame(roomid);\n  };\n};\n\nexport const onDraw = (socket, roomid, drawings) => {\n  return (dispatch) => {\n    socket.onDraw(roomid, drawings);\n  }\n}\n\n\nexport const sendMessage = (socket, roomid, message) => {\n  return (dispatch) => {\n    socket.socket.emit(\"sendMessage\", roomid, message)\n  }\n}\n\nexport const leaveRoom = (socket) => {\n  return (dispatch) => {\n    socket.socket.emit(\"leaveRoom\");\n  }\n}\n\nexport const prepare = (socket, roomid) => {\n  return (dispatch) => {\n    socket.socket.emit(\"prepare\", roomid);\n  }\n}","import { TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport Socket from \"../utils/socket\";\nimport { sendMessage } from \"../store/actions/room\";\nimport \"./ChatContainer.css\";\nimport { useDispatch } from \"react-redux\";\n\nconst ChatContainer = (props) => {\n  const [guessText, setGuessText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const socket = new Socket();\n\n  const dispatch = useDispatch();\n  const { roomid, isEditing } = props;\n\n  useEffect(() => {\n    socket.socket.on(\"loadMessages\", (data) => {\n      data = JSON.parse(data);\n      setMessages(data);\n    });\n  }, []);\n\n  const textHandler = (e) => {\n    setGuessText(e.target.value);\n  };\n\n  const onEnter = (e) => {\n    if (e.keyCode === 13) {\n      dispatch(sendMessage(socket, roomid, e.target.value));\n      setGuessText(\"\");\n    }\n  };\n\n  const b = [];\n  for (var i = 0; i < 10; i++) b.push(i);\n\n  return (\n    <div className=\"chatarea\">\n      <div className=\"messagesDisplayArea\">\n        {messages.map((v) => {\n          const textColor = v.id === socket.socket.id ? \"pink\" : \"black\";\n          return (\n            <div style={{ display: \"flex\", padding: \"2%\", width: \"95%\" }}>\n              <div\n                style={{\n                  fontSize: \"2.3vh\",\n                  wordBreak: \"break-all\",\n                  border: \"gray solid 0.1px\",\n                  borderRadius: \"10px\",\n                  textAlign: \"left\",\n                  color: textColor,\n                }}\n              >\n                {v.sender + \" : \" + v.message}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"chatInputArea\">\n        <TextField\n          value={guessText}\n          onChange={textHandler}\n          onKeyDown={onEnter}\n        />\n      </div>\n      {isEditing ? (\n        <div className=\"inputOverLay\">\n          <div>You are drawing..</div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ChatContainer;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst CustomButton = (props) => {\n  return (\n    <Button\n      variant=\"contained\"\n      style={{\n        backgroundColor: props.backgroundColor,\n        width: props.width,\n        height: props.height,\n        borderRadius: \"30px\",\n        border: props.border || \"solid gray\",\n        borderWidth: \"2px 2px\",\n      }}\n\n      onClick={props.onClick}\n    >\n      {props.children}\n    </Button>\n  );\n};\n\nexport default CustomButton\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport PlayerCard from \"../components/PlayCard\";\nimport DrawingPad from \"../components/DrawingPad\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport Socket from \"../utils/socket\";\nimport { useHistory } from \"react-router\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport {\n  startGame,\n  GAME_STATE,\n  ROUND_STATE,\n  onDraw,\n  leaveRoom,\n  prepare,\n} from \"../store/actions/room\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomButton from \"../components/CustomButton\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport \"../App.css\";\n\nconst HomeScreen = (props) => {\n  // const [players, setPlayers] = useState([]);\n  const [initialValue, setInitialValue] = useState(\n    localStorage.getItem(\"1111\") || null\n  );\n  const [gameState, setGameState] = useState(\"waiting\");\n  const [timeLeft, setTimeLeft] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [backDrop, setBackDrop] = useState(false);\n\n  const socket = Socket.getInstance();\n  const dispatch = useDispatch();\n\n  const drawingPadRef = useRef();\n  const selectedRoom = useSelector((state) => {\n    return state.room.currentIn;\n    // return state.room.room.find((v) => v.id === props.location.state.roomid);\n  });\n\n  const history = useHistory();\n  // update board\n\n  useEffect(() => {\n    socket.socket.on(\"onDraw\", (data) => {\n      setInitialValue(data);\n    });\n  });\n\n  // check for room status\n  useEffect(() => {\n    socket.socket.on(\"roomPlaying\", (data) => {\n      data = JSON.parse(data);\n      if (data.state === GAME_STATE.PREPARE) {\n        setGameState(\"waiting\");\n      } else if (data.state === GAME_STATE.INGAME) {\n        switch (data.round_state) {\n          case ROUND_STATE.PREPARE:\n            setGameState(\"preparing:\");\n            setTimeLeft(data.prepare);\n            setIsEditing(\n              data.players.find((v) => v !== null && v.id === data.owner)\n                .isEditing && socket.socket.id === data.owner\n            );\n\n            drawingPadRef.current && drawingPadRef.current._clear();\n            break;\n          case ROUND_STATE.DRAWING:\n            setGameState(\"drawing:\");\n            setTimeLeft(data.roundTimer);\n            setIsEditing(\n              data.players.find((v) => v !== null && v.id === data.owner)\n                .isEditing && socket.socket.id === data.owner\n            );\n            break;\n          default:\n            break;\n        }\n      } else if ((data.state = GAME_STATE.FINISH)) {\n        setGameState(\"waiting\");\n        setTimeLeft(\"\");\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onStart = () => {\n    dispatch(startGame(socket, props.location.state.roomid));\n  };\n\n  const onPrepare = () => {\n    dispatch(prepare(socket, props.location.state.roomid));\n  };\n  const onExit = async () => {\n    setBackDrop(true);\n    dispatch(leaveRoom(socket));\n    await new Promise((resolve) => {\n      setTimeout(() => {\n        history.goBack();\n        resolve(setBackDrop(false));\n      }, 800);\n    });\n  };\n\n  const _onDraw = (drawings) => {\n    dispatch(onDraw(socket, props.location.state.roomid, drawings));\n  };\n  const PrepareContainer = () => {\n    let currentUser = null;\n    let isOwner = null;\n    if (selectedRoom) {\n      currentUser = selectedRoom.players.find(\n        (v) => v && v.id === socket.socket.id\n      );\n      isOwner = selectedRoom.owner === socket.socket.id;\n    }\n\n    return (\n      <div className=\"prepareContainer\">\n        {\" \"}\n        <CustomButton\n          backgroundColor=\"#00FF00\"\n          width=\"46%\"\n          height=\"70%\"\n          onClick={isOwner ? onStart : onPrepare}\n        >\n          {isOwner ? (\n            \"Start\"\n          ) : currentUser && currentUser.prepare ? (\n            <div>\n              <CheckIcon style={{ fontSize: 60, color: \"orange\" }} />\n              <div\n                style={{\n                  opacity: 0.6,\n                  position: \"absolute\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  top: \"50%\",\n                }}\n              >\n                ready\n              </div>\n            </div>\n          ) : (\n            <div style={{ position: \"relative\" }}>\n              <div\n                style={{\n                  position: \"absolute\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  top: \"50%\",\n                }}\n              >\n                prepare\n              </div>\n            </div>\n          )}\n        </CustomButton>\n        <CustomButton\n          backgroundColor=\"red\"\n          width=\"46%\"\n          height=\"70%\"\n          onClick={onExit}\n        >\n          Exit\n        </CustomButton>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Backdrop style={{ zIndex: 10 }} open={backDrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <div className=\"player-container\">\n        <PrepareContainer />\n        {selectedRoom &&\n          selectedRoom.players.map((val) => {\n            if (val === null) return <PlayerCard name={\"EMPTY\"} />;\n            else\n              return (\n                <PlayerCard\n                  name={val.name}\n                  isEditing={val.isEditing}\n                  score={\"score: \" + val.points}\n                />\n              );\n          })}\n      </div>\n\n      <div className=\"game-container\">\n        <DrawingPad\n          ref={drawingPadRef}\n          initialValue={initialValue}\n          onDraw={_onDraw}\n          isEditing={isEditing}\n          roomid={props.location.state.roomid}\n        />\n      </div>\n      <div className=\"chat-container\">\n        <div className=\"globalTimer\">\n          <text>{gameState}</text>\n          <text style={{ color: \"yellowgreen\" }}>{timeLeft}</text>\n        </div>\n        <ChatContainer\n          isEditing={isEditing}\n          roomid={props.location.state.roomid}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","class Room {\n  static GAME_STATE = {\n    PREPARE: \"PREPARE\",\n    INGAME : \"INGAME\"\n  }\n\n  constructor(id, timeLimit, name, maxPlayer) {\n    this.id = id;\n    this.name = name;\n    this.isPlaying = false;\n    this.timeLimit = timeLimit;\n    this.maxPlayer = maxPlayer;\n    this.players = [null, null, null, null, null];\n    this.totalRound = 0;\n    this.curRound = 0;\n    this.prepare = 20;\n    this.state = Room.GAME_STATE.prepare\n  }\n\n  addPlayer = (p) => {\n    this.players.forEach((v, i) => {\n      if (v === null && !this.isFull) {\n        this.players[i] = p;\n        return;\n      }\n    });\n    alert(\"this room is full, please go to another one\");\n  };\n\n  isFull = () => {\n    var total = 5;\n    this.players.forEach((v) => {\n      if (v === null) {\n        total--;\n      }\n    });\n    return total <= this.maxPlayer;\n  };\n\n  prepareTimer = async () => {\n    return new Promise((resolve) => {\n      this.prepare = 5;\n      const interval = setInterval(() => {\n        this.prepare--;\n        //console.log(this.prepare)\n        if (this.prepare === 0) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 1000);\n    });\n  };\n\n  gameTimer = async () => {\n    return await new Promise((resolve) => {\n      var i = 30;\n      const interval = setInterval(() => {\n        i++;\n        if (i === 34) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 1000);\n    });\n  };\n\n\n  gameLoop = async () => {\n    await this.prepareTimer()\n    await this.gameTimer()\n  }\n\n  start = async () => {\n    this.totalRound = this.players.filter((v) => v != null).length * 2;\n    var index = 0;\n    while (index < 1) {\n      // alert(1)\n      await this.gameLoop();\n      index++;\n    }\n  };\n\n  starts = () => {\n    this.prepare++;\n    console.log(this.prepare)\n  }\n}\n\nexport default Room;\n","import React, { forwardRef, useImperativeHandle, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Room from \"../models/Room\";\nimport Socket from \"../utils/socket\";\nimport CustomButton from \"./CustomButton\";\nimport \"./RoomCreateModal.css\";\n\nconst timeRange = [60, 70, 80, 90, 100];\nconst personLimits = [2, 3, 4, 5];\n\nconst RoomCreateModal = forwardRef((props, ref) => {\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomPassord, setRoomPassword] = useState(\"\");\n  const [timeLimit, setTimeLimit] = useState(timeRange[0]);\n  const [personLimit, setPersonLimit] = useState(personLimits[0]);\n  const [isShow, setIsShow] = useState(false);\n  const [promiseInfo, setPromiseInfo] = useState(null);\n  const socket = new Socket().socket;\n\n  const roomNameHandler = (e) => {\n    setRoomName(e.target.value);\n  };\n\n  const roomPasswordHandler = (e) => {\n    setRoomPassword(e.target.value);\n  };\n  const timeLimitHandler = (e) => {\n    setTimeLimit(e.target.value);\n  };\n\n  const personLimitHandler = (e) => {\n    setPersonLimit(e.target.value);\n  };\n\n  useImperativeHandle(ref, () => ({\n    show: async () => {\n      return new Promise((resolve, reject) => {\n        setIsShow(true);\n        setPromiseInfo({ resolve, reject });\n      });\n    },\n  }));\n\n  const createHandler = () => {\n    let room = new Room(socket.id, timeLimit, roomName, personLimit);\n    setIsShow(false);\n    promiseInfo.resolve(room);\n  };\n\n  const cancelHandler = () => {\n    setIsShow(false);\n    promiseInfo.reject();\n  };\n\n  return (\n    <div\n      className=\"roomcreatemodal-container\"\n      style={{ display: isShow ? \"flex\" : \"none\", zIndex: 20 }}\n      ref={ref}\n    >\n      <div className=\"room-input\">\n        <TextField\n          id=\"room-name\"\n          label=\"Room Name\"\n          value={roomName}\n          onChange={roomNameHandler}\n        />\n      </div>\n      <div className=\"room-input\">\n        <TextField\n          id=\"room-password\"\n          label=\"Room Password\"\n          placeholder=\"leave empty if no\"\n          value={roomPassord}\n          onChange={roomPasswordHandler}\n        />\n      </div>\n      <div className=\"room-input\">\n        <TextField\n          id=\"room-time-limit\"\n          select\n          label=\"Timie Limit\"\n          value={timeLimit}\n          onChange={timeLimitHandler}\n          helperText=\"Select time limit\"\n        >\n          {timeRange.map((v) => (\n            <MenuItem key={v + \" seconds\"} value={v}>\n              {v + \" seconds\"}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"room-input\">\n        <TextField\n          id=\"room-time-limit\"\n          select\n          label=\"Timie Limit\"\n          value={personLimit}\n          onChange={personLimitHandler}\n          helperText=\"Select person limits \"\n        >\n          {personLimits.map((v) => (\n            <MenuItem key={v + \" persons\"} value={v}>\n              {v}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n\n      <div\n        className=\"create-button-container\"\n        style={{ height: \"13.5\", width: \"75\" }}\n      >\n        <CustomButton\n          backgroundColor=\"red\"\n          height=\"100%\"\n          border=\"solid #f7d9d9\"\n          onClick={cancelHandler}\n        >\n          cancel\n        </CustomButton>\n\n        <CustomButton\n          backgroundColor=\"#f9f3f3\"\n          height=\"100%\"\n          border=\"solid gray\"\n          onClick={createHandler}\n        >\n          create\n        </CustomButton>\n      </div>\n    </div>\n  );\n});\n\nexport default RoomCreateModal;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Room from \"../models/Room\";\nimport \"./Table.css\";\nconst Table = (props) => {\n  const { joinHandler, gameState } = props;\n  const disabled = gameState === Room.GAME_STATE.INGAME;\n  return (\n    <div\n      className=\"round-table\"\n      style={{ width: props.width, height: props.height }}\n    >\n      <div className=\"round-table-top\">\n        <div className=\"child-table\"></div>\n        <div className=\"child-table\"></div>\n      </div>\n      <div className=\"round-table-bottom\">\n        <div className=\"child-table-bottom\"></div>\n        <div className=\"child-table-bottom\"></div>{\" \"}\n        <div className=\"child-table-bottom\"></div>\n      </div>\n      <Button\n        variant=\"contained\"\n        style={{\n          backgroundColor: disabled ? \"red\" : \"#00FF00\",\n          width: \"40%\",\n          height: \"15%\",\n          borderRadius: \"30px\",\n          borderWidth: \"2px 2px\",\n          left: \"50%\",\n          top: \"90%\",\n          transform: \"translateX(-50%) translateY(-100%)\",\n          display: \"inline\",\n          fontSize: 10,\n          color: \"black\",\n        }}\n        disabled={disabled}\n        onClick={joinHandler}\n      >\n        {disabled ? \"IN-GAME \" : \"JOIN\"}\n      </Button>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tables from \"@material-ui/core/Table\";\nimport CustomButton from \"./CustomButton\";\nimport \"../App.css\";\nconst LobbyInfoContainer = (props) => {\n\n  const [aButtonText, setAButtonText] = useState(\"available rooms\")\n  const { createRoom, players, showAvailableRooms } = props;\n\n\n  const columns = [\n    { id: \"name\", label: \"Name\", minWidth: 120 },\n    {\n      id: \"id\",\n      label: \"ID\",\n      minWidth: 270,\n      align: \"left\",\n    },\n  ];\n  return (\n    <div className=\"info-container\">\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"2%\",\n          textAlign: \"center\",\n          width: \"80%\",\n        }}\n      >\n        <b>total players: {players.length}</b>\n      </div>\n      <div className=\"players-info\">\n        <TableContainer style={{ minHeight: \"100%\" }}>\n          <Tables stickyHeader aria-label=\"sticky table\" size=\"small\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {players.map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Tables>\n        </TableContainer>\n      </div>\n      <div className=\"lobby-button-groups\">\n        <CustomButton\n          backgroundColor=\"lightblue\"\n          width=\"80%\"\n          onClick={createRoom}\n        >\n          New Room\n        </CustomButton>\n        <CustomButton\n          backgroundColor=\"lightblue\"\n          width=\"80%\"\n          onClick={() => {showAvailableRooms(); setAButtonText(e => e === \"available rooms\" ? \"all rooms\" : \"available rooms\" )}}\n        >\n          {aButtonText}\n        </CustomButton>\n      </div>\n    </div>\n  );\n};\n\nfunction createData(name, id) {\n  return { name, id };\n}\nexport default LobbyInfoContainer;\n","export const GET_ALL_PLAYERS = \"GET_ALL_PLAYERS\";\n\n\nexport const getAllPlayers = (players) => {\n  return {\n    type: GET_ALL_PLAYERS,\n    players: players,\n  };\n};","import React, { useEffect, useRef, useState } from \"react\";\nimport RoomCreateModal from \"../components/RoomCreateModal\";\nimport Table from \"../components/Table\";\nimport Socket from \"../utils/socket\";\nimport {\n  getAllRoom,\n  createNewRoomSocket,\n  getAllRoomsSocket,\n  jointRoom,\n} from \"../store/actions/room\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useHistory } from \"react-router\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LobbyInfoContainer from \"../components/LobbyInfoContainer\";\nimport { getAllPlayers, GET_ALL_PLAYERS } from \"../store/actions/player\";\nimport { Snackbar } from \"@material-ui/core\";\n// tables\n\nconst GameLobbyScreen = (props) => {\n  const modalRef = useRef();\n  const [backDrop, setBackDrop] = useState(false);\n  const [showAvailableRooms, setShowAvailableRooms] = useState(false);\n  const [cancel, setCancel] = useState(false);\n  const socket = Socket.getInstance();\n  const allRooms = useSelector((state) => {\n    if (showAvailableRooms) {\n      return state.room.room.filter((v) => !v.isPlaying);\n    }\n    return state.room.room;\n  });\n\n  console.log(allRooms);\n\n  const allPlayers = useSelector((state) => state.players.players);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    socket.socket.on(\"allRooms\", (rooms) => {\n      rooms = JSON.parse(rooms);\n      dispatch(getAllRoom(rooms));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    socket.socket.on(\"jointRoom\", (room) => {\n      room = JSON.parse(room);\n      dispatch(jointRoom(room));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    socket.socket.on(\"allPlayers\", (player) => {\n      player = JSON.parse(player);\n      console.log(player);\n      dispatch(getAllPlayers(player));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const waitJoinRoom = async (createdRoom) => {\n    setBackDrop(true);\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        dispatch(createNewRoomSocket(socket, createdRoom));\n        resolve(setBackDrop(false));\n      }, 800);\n    });\n  };\n  const createRoom = async () => {\n    const modal = modalRef.current;\n    setTimeout(async () => {\n      try {\n        const result = await modal.show();\n        let createdRoom = {\n          id: uuidv4(),\n          name: result.name,\n          timeLimit: result.timeLimit,\n          maxPlayer: result.maxPlayer,\n        };\n\n        await waitJoinRoom(createdRoom);\n        history.push(`/gameroom/${createdRoom.id}`, {\n          roomid: createdRoom.id,\n        });\n      } catch (err) {\n        console.log(err);\n        setCancel(true);\n        await new Promise((resolve) => setTimeout(() => resolve(setCancel(false)), 800));\n      }\n    }, 100);\n  };\n\n  const joinRoom = async (id) => {\n    let createdRoom = allRooms.find((v) => v.id === id);\n    if (createdRoom.curPlayers < createdRoom.maxPlayer) {\n      await waitJoinRoom(createdRoom);\n      history.push(`gameroom/${id}`, { roomid: createdRoom.id });\n    } else {\n      alert(\"room is full\");\n    }\n  };\n\n  const renderRoom = () => {\n    for (var i = 0; i < allRooms.length; i++) {\n      const rrrrr = allRooms[i];\n      if (rrrrr !== null) {\n        rooms.push(\n          <Table\n            key={i + \"13132\"}\n            height={200}\n            width={200}\n            joinHandler={() => joinRoom(rrrrr.id)}\n            gameState={rrrrr.state}\n          ></Table>\n        );\n      }\n    }\n  };\n  var rooms = [];\n  renderRoom();\n  useEffect(() => {\n    renderRoom();\n  }, [allRooms]);\n\n  // initialize all rooms\n  useEffect(() => {\n    dispatch(getAllRoomsSocket(socket));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"container\" id=\"lobby\">\n      <Snackbar\n        anchorOrigin={{  vertical: 'top', horizontal: 'center' }}\n        open={cancel}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\",\n        }}\n        message={<span id=\"message-id\">Cancel</span>}\n      />\n      <Backdrop style={{ zIndex: 20 }} open={backDrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <RoomCreateModal ref={modalRef} />\n      <div className=\"tables-container\">{rooms}</div>\n      <LobbyInfoContainer\n        createRoom={createRoom}\n        players={allPlayers}\n        showAvailableRooms={() => setShowAvailableRooms((e) => !e)}\n      />\n    </div>\n  );\n};\n\nexport default GameLobbyScreen;\n","import { GET_ALL_ROOM, JOIN_ROOM } from \"../actions/room\";\nimport { ROOMS } from \"../dummy-data\";\n\nconst initialState = {\n  room: ROOMS,\n  currentIn: null,\n};\n\nconst roomReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_ROOM:\n      return { ...state, room: action.rooms };\n    case JOIN_ROOM:\n      return { ...state, currentIn: action.room };\n    default:\n      return state;\n  }\n};\n\nexport default roomReducer;\n","\nimport Room from \"../models/Room\";\nlet room2 = new Room(\"21313\", 60, \"aad\", 2);\nexport const ROOMS = [room2];\n","import {GET_ALL_PLAYERS} from \"../actions/player\";\n\n\nconst initialState = {\n  players: [],\n};\n\nconst playerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_PLAYERS:\n      return { ...state, players: action.players };\n    default:\n      return state\n  }\n};\n\nexport default playerReducer","import \"./App.css\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Socket from \"./utils/socket\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport GameLobbyScreen from \"./screens/GameLobbyScreen\";\nimport RoomCreateModal from \"./components/RoomCreateModal\";\nimport thunk from \"redux-thunk\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport roomReducer from \"./store/reducers/room\";\n\n// import socket io\n\nimport \"./App.css\";\n\n// If you are using v7 or any earlier version of the JS SDK, you should import firebase using namespace import\n// import * as firebase from \"firebase/app\"\n\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\nimport \"firebase/analytics\";\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport playerReducer from \"./store/reducers/player\";\n\nvar mysocket = new Socket();\nmysocket.onConnect(111);\n\nconst rootReducer = combineReducers({\n  room: roomReducer,\n  players: playerReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"mainContainer\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/lobby\" />\n            </Route>\n            <Route exact path=\"/lobby\" component={GameLobbyScreen} />\n            <Route exact path=\"/test\" component={RoomCreateModal} />\n            <Route\n              path={`/gameroom/:id`}\n              render={(props) => {\n                return <HomeScreen {...props} />;\n              }}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Firebase App (the core Firebase SDK) is always required and must be listed first\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}