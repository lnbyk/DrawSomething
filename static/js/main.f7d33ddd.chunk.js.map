{"version":3,"sources":["utils/socket.js","logo.svg","components/PlayCard.jsx","components/DrawingPad.jsx","store/actions/room.js","components/ChatContainer.jsx","components/CustomButton.jsx","screens/HomeScreen.jsx","models/Room.js","components/RoomCreateModal.jsx","assets/draingPad.png","assets/draingPadBW.png","components/Table.jsx","components/LobbyInfoContainer.jsx","store/actions/player.js","screens/GameLobbyScreen.jsx","store/reducers/room.js","store/dummy-data.js","store/reducers/player.js","App.js","reportWebVitals.js","index.js"],"names":["Socket","_instance","this","socket","io","player","emit","JSON","stringify","room","roomid","drawings","PlayerCard","props","isEditingMessage","undefined","isEditing","bgColor","className","style","backgroundColor","Image","src","a","rounded","score","color","name","Tools","require","fabric","render","DisplayedCanvas","position","width","height","zIndex","ref","c","passCanvasHandler","DrawingPad","forwardRef","useState","canUndo","setCanUndo","canRedo","setCanRedo","lineColor","setLineColor","lineWidth","controlledValue","tool","setTool","selectedRoom","useSelector","state","find","v","id","_sketch","useRef","initialValue","useEffect","fromJSON","_onMouseDown","useImperativeHandle","_clear","clear","setBackgroundFromDataUrl","console","save","data","filename","blob","Blob","type","e","document","createEvent","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","join","initMouseEvent","dispatchEvent","error","styles","toolbar","display","variant","flexGrow","currentQuestion","question","IconButton","disabled","onClick","undo","err","log","redo","localStorage","setItem","toJSON","location","toDataURL","replace","textAlign","hint","fillColor","defaultValue","value","forceValue","onChange","prev","now","onDraw","padding","justifyContent","FormControl","InputLabel","Select","labelId","label","target","map","MenuItem","hex","border","boxShadow","GET_ALL_ROOM","JOIN_ROOM","GAME_STATE","ROUND_STATE","createNewRoomSocket","dispatch","createOrJoin","leaveRoom","ChatContainer","guessText","setGuessText","messages","setMessages","useDispatch","on","parse","b","i","push","textColor","fontSize","wordBreak","borderRadius","sender","message","TextField","onKeyDown","keyCode","sendMessage","CustomButton","Button","borderWidth","children","HomeScreen","getItem","setInitialValue","gameState","setGameState","timeLeft","setTimeLeft","setIsEditing","backDrop","setBackDrop","getInstance","drawingPadRef","currentIn","history","useHistory","round_state","prepare","currentEditing","current","roundTimer","onStart","startGame","onPrepare","onExit","Promise","resolve","setTimeout","goBack","PrepareContainer","currentUser","isOwner","players","owner","opacity","left","transform","top","Backdrop","open","CircularProgress","val","points","Room","timeLimit","maxPlayer","roomPassord","isPlaying","totalRound","curRound","password","PREPARE","INGAME","timeRange","personLimits","RoomCreateModal","roomName","setRoomName","setRoomPassword","setTimeLimit","personLimit","setPersonLimit","isShow","setIsShow","promiseInfo","setPromiseInfo","show","reject","placeholder","select","helperText","PasswordCompareModal","setPassword","marginTop","gap","Table","joinHandler","topPlayer","slice","bottomPlayer","Seat","backgroundImage","draingPadBW","draingPad","cursor","bottom","LobbyInfoContainer","aButtonText","setAButtonText","createRoom","showAvailableRooms","columns","minWidth","align","length","TableContainer","minHeight","stickyHeader","aria-label","size","TableHead","TableRow","column","TableCell","TableBody","row","hover","role","tabIndex","format","code","GET_ALL_PLAYERS","GameLobbyScreen","modalRef","passwordModalRef","setShowAvailableRooms","cancel","setCancel","snackBarMessage","setSnackBarMessage","allRooms","filter","allPlayers","rooms","getAllRoom","jointRoom","waitJoinRoom","createdRoom","modal","result","uuidv4","joinRoom","curPlayers","alert","renderRoom","rrrrr","getAllRooms","getAllRoomsSocket","Snackbar","anchorOrigin","vertical","horizontal","ContentProps","initialState","roomReducer","action","playerReducer","onConnect","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","App","exact","path","to","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f7d33ddd.chunk.js","sourcesContent":["import { io } from \"socket.io-client\";\n\nconst END_POINT = \"http://localhost:8000\";\n\nclass Socket {\n  constructor() {\n    if (!!Socket._instance) {\n      return Socket._instance;\n    }\n\n    Socket._instance = this;\n\n    this.socket = io(END_POINT);\n\n    \n    return this;\n  }\n\n  static getInstance() {\n    return this._instance;\n  }\n\n  onConnect(player) {\n    this.socket.emit(\"onConnect\", JSON.stringify(player));\n  }\n\n  createOrJoin(room) {\n      this.socket.emit(\"createRoom\", JSON.stringify(room));\n  }\n  getAllRooms() {\n      this.socket.emit(\"allRooms\");\n  }\n  startGame(roomid) {\n      this.socket.emit(\"startGame\", roomid);\n  }\n  onDraw(roomid, drawings) {\n    this.socket.emit(\"onDraw\", roomid, drawings);\n  }\n}\n\nexport default Socket;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport \"./PlayCard.css\";\nimport a from \"../logo.svg\";\nconst PlayerCard = (props) => {\n    //f6dfeb\n\n    const isEditingMessage = props.isEditing === undefined? \"\" : (props.isEditing ? \"Editing\":  \"Guessing\")\n    const bgColor = props.isEditing ? '#a1cae2' :'white';\n  return (\n    <div className=\"PlayCard\" style={{ ...props.style, backgroundColor:bgColor}}>\n      <Image src={a} rounded className=\"playcard-imageholder\" />\n      <div className=\"information\">\n        <div>{props.score}</div>\n        <div style={{ color: \"orange\" }}>{props.name}</div>\n        <div>{isEditingMessage}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerCard;\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { SketchField } from \"react-sketch\";\nimport Toolbar from \"@material-ui/core/Toolbar/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { CompactPicker, CirclePicker } from \"react-color\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CopyIcon from \"@material-ui/icons/FileCopy\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { useSelector } from \"react-redux\";\nimport {\n  FormControl,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\n// select icons\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport Crop75Icon from \"@material-ui/icons/Crop75\";\nconst fabric = require(\"fabric\").fabric;\n\nconst Tools = [\n  {\n    name: \"pencil\",\n    render: <CreateIcon />,\n  },\n  {\n    name: \"circle\",\n    render: <RadioButtonUncheckedIcon />,\n  },\n  {\n    name: \"arrow\",\n    render: <ArrowForwardIcon />,\n  },\n  {\n    name: \"line\",\n    render: <RemoveIcon />,\n  },\n  {\n    name: \"rectangle\",\n    render: <Crop75Icon />,\n  },\n];\n\nconst DisplayedCanvas = (props) => {\n  return (\n    <div style={{ ...props.style }}>\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: \"transparent\",\n          zIndex: 3,\n        }}\n      />\n      <div\n        style={{\n          zIndex: 2,\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <SketchField\n          height={700}\n          ref={(c) => {\n            props.passCanvasHandler(c);\n          }}\n        ></SketchField>\n      </div>\n    </div>\n  );\n};\n\nconst DrawingPad = forwardRef((props, ref) => {\n  const [canUndo, setCanUndo] = useState(false);\n  const [canRedo, setCanRedo] = useState(false);\n  const [lineColor, setLineColor] = useState(\"black\");\n  const [lineWidth, setLineWidth] = useState(10);\n  const [controlledValue, setControlledValue] = useState(null);\n  const [tool, setTool] = useState(Tools[0].name);\n  const { isEditing, roomid } = props;\n\n  const selectedRoom = useSelector((state) => {\n    return state.room.room.find((v) => v.id === roomid);\n  });\n\n  const refs = useRef(null);\n  var _sketch = null;\n  // props from parent\n  const { initialValue } = props;\n  // update canvas for thoes who are guessing\n  useEffect(() => {\n    _sketch.fromJSON(initialValue);\n    _sketch._onMouseDown = () => {};\n  }, [initialValue, _sketch]);\n\n  // handle update to database\n  //  useEffect( () => {\n  //   try {\n  //      db.ref(\"canvas\").push({\n  //       content: _sketch.toJSON(),\n  //       timestamp: Date.now(),\n  //       uid: \"sss\"\n  //     })\n  //   } catch (error) {\n  //     alert(error);\n  //   }\n  // },[_sketch])\n\n  const _selectTool = (v) => {\n    setTool(v.target.value);\n  };\n  const _undo = () => {\n    try {\n      _sketch.undo();\n      setCanUndo(_sketch.canUndo());\n      setCanRedo(_sketch.canRedo());\n    } catch (err) {\n      console.log(\"undo error\", err);\n    }\n  };\n\n  const _redo = () => {\n    try {\n      _sketch.redo();\n      setCanUndo(_sketch.canUndo());\n      setCanRedo(_sketch.canRedo());\n    } catch (err) {\n      console.log(\"redo error\", err);\n    }\n  };\n\n  const _save = () => {\n    localStorage.setItem(\"1111\", JSON.stringify(_sketch.toJSON()));\n  };\n\n  useImperativeHandle(ref, () => ({\n    _clear: _clear,\n  }));\n\n  const _download = () => {\n    //console.save(_sketch.toDataURL(), 'toDataURL.txt');\n    //console.save(JSON.stringify(_sketch.toJSON()), 'toDataJSON.txt');\n\n    /*eslint-enable no-console*/\n    window.location.href = _sketch\n      .toDataURL()\n      .replace(\"image/png\", \"image/octet-stream\");\n    // imgDown.href = _sketch.toDataURL();\n    // imgDown.download = 'toPNG.png';\n    // imgDown.dispatchEvent(event);\n  };\n\n  const _clear = () => {\n    _sketch.clear();\n    _sketch.setBackgroundFromDataUrl(\"\");\n\n    setCanUndo(_sketch.canUndo)\n    setCanRedo(_sketch.canRedo());\n  };\n\n  const _onSketchChange = (e) => {\n    // console.log(isEditing);\n    try {\n      let prev = canUndo;\n      let now = _sketch.canUndo();\n      props.onDraw(JSON.stringify(_sketch.toJSON()));\n      if (prev !== now) {\n        setCanUndo(now);\n      }\n    } catch (err) {}\n  };\n\n  const passCanvasHandler = (c) => {\n    _sketch = c;\n  };\n\n  useEffect(() => {\n    (function (console) {\n      console.save = function (data, filename) {\n        if (!data) {\n          console.error(\"Console.save: No data\");\n          return;\n        }\n        if (!filename) filename = \"console.json\";\n        if (typeof data === \"object\") {\n          data = JSON.stringify(data, undefined, 4);\n        }\n        var blob = new Blob([data], { type: \"text/json\" }),\n          e = document.createEvent(\"MouseEvents\"),\n          a = document.createElement(\"a\");\n        a.download = filename;\n        a.href = window.URL.createObjectURL(blob);\n        a.dataset.downloadurl = [\"text/json\", a.download, a.href].join(\":\");\n        e.initMouseEvent(\n          \"click\",\n          true,\n          false,\n          window,\n          0,\n          0,\n          0,\n          0,\n          0,\n          false,\n          false,\n          false,\n          false,\n          0,\n          null\n        );\n        a.dispatchEvent(e);\n      };\n    })(console);\n  }, []);\n\n  return (\n    <div>\n      <div height=\"10%\">\n        {isEditing ? (\n          <Toolbar style={{ ...styles.toolbar, display: isEditing }}>\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              style={{ flexGrow: 1, color: \"orange\" }}\n            >\n              {selectedRoom && selectedRoom.currentQuestion.question}\n            </Typography>\n            <IconButton color=\"primary\" disabled={!canUndo} onClick={_undo}>\n              <UndoIcon />\n            </IconButton>\n            <IconButton color=\"primary\" disabled={!canRedo} onClick={_redo}>\n              <RedoIcon />\n            </IconButton>\n            <IconButton color=\"primary\" onClick={_save}>\n              <SaveIcon />\n            </IconButton>\n            <IconButton color=\"primary\" onClick={_download}>\n              <DownloadIcon />\n            </IconButton>\n            <IconButton color=\"primary\" onClick={_clear}>\n              <DeleteIcon />\n            </IconButton>\n          </Toolbar>\n        ) : (\n          <Toolbar\n            style={{\n              ...styles.toolbar,\n              display: !isEditing,\n              textAlign: \"center\",\n            }}\n          >\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              style={{ flexGrow: 1, color: \"orange\" }}\n            >\n              {selectedRoom && `提示 : ${selectedRoom.currentQuestion.hint}`}\n            </Typography>\n            <IconButton color=\"primary\" onClick={_clear}>\n              <DeleteIcon />\n            </IconButton>\n          </Toolbar>\n        )}\n      </div>\n\n      <div height=\"80%\">\n        {isEditing ? (\n          <SketchField\n            name=\"sketch\"\n            className=\"canvas-area\"\n            ref={(c) => (_sketch = c)}\n            lineColor={lineColor}\n            lineWidth={lineWidth}\n            fillColor={\"transparent\"}\n            height={630}\n            backgroundColor={\"transparent\"}\n            defaultValue={initialValue}\n            value={controlledValue}\n            forceValue\n            onChange={_onSketchChange}\n            tool={tool}\n          />\n        ) : (\n          <DisplayedCanvas\n            style={{ width: \"100%\", height: 630 }}\n            passCanvasHandler={passCanvasHandler}\n          />\n        )}\n      </div>\n      {isEditing ?\n      <div>\n        <Toolbar\n          style={{\n            ...styles.toolbar,\n            backgroundColor: 'lightgray',\n            zIndex: 4,\n            display: \"flex\",\n            padding: 5,\n            justifyContent: \"space-around\",\n          }}\n        >\n          <FormControl variant=\"outlined\" style={{ width: \"20%\" }}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              tools\n            </InputLabel>\n\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={tool}\n              label=\"Age\"\n              onChange={_selectTool}\n            >\n              {Tools.map((v) => {\n                return (\n                  <MenuItem value={v.name} key={v.name}>\n                    <div style={{ display: \"flex\" }}>\n                      {v.render} {v.name}\n                    </div>\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n\n          <CirclePicker\n            id=\"lineColor\"\n            color={lineColor}\n            onChange={(color) => setLineColor(color.hex)}\n            width=\"50%\"\n          />\n        </Toolbar>\n      </div> : null}\n    </div>\n  );\n});\n\nconst styles = {\n  toolbar: {\n    backgroundColor: \"#333\",\n    border: \"solid 1px\",\n    boxShadow: `0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)`,\n  },\n};\n\nexport default DrawingPad;\n\n// console.log(localStorage.getItem(\"1111\"));\n","export const GET_ALL_ROOM = \"GET_ALL_ROOM\";\nexport const JOIN_ROOM = \"JOIN_ROOM\";\nexport const GAME_STATE = {\n  PREPARE: \"PREPARE\",\n  INGAME: \"INGAME\",\n  FINISH: \"FINISH\",\n};\n\nexport const ROUND_STATE = {\n  PREPARE: \"PREPARE\",\n  DRAWING: \"DRAWING\",\n};\n\nexport const getAllRoom = (rooms) => {\n  return {\n    type: GET_ALL_ROOM,\n    rooms: rooms,\n  };\n};\n\nexport const jointRoom = (room) => {\n  return {\n    type: JOIN_ROOM,\n    room:room\n  }\n}\n\n/***************************************************************************************** */\n/* Async Action items using - Sockets\t\t\t\t\t\t\t\t\t\t\t\t\t   */\n/***************************************************************************************** */\nexport const createNewRoomSocket = (socket, room) => {\n  return (dispatch) => {\n    socket.createOrJoin(room);\n  };\n};\n\nexport const getAllRoomsSocket = (socket) => {\n  return (dispatch) => {\n    socket.getAllRooms();\n  };\n};\n\nexport const startGame = (socket, roomid) => {\n  return (dispatch) => {\n    socket.startGame(roomid);\n  };\n};\n\nexport const onDraw = (socket, roomid, drawings) => {\n  return (dispatch) => {\n    socket.onDraw(roomid, drawings);\n  }\n}\n\n\nexport const sendMessage = (socket, roomid, message) => {\n  return (dispatch) => {\n    socket.socket.emit(\"sendMessage\", roomid, message)\n  }\n}\n\nexport const leaveRoom = (socket) => {\n  return (dispatch) => {\n    socket.socket.emit(\"leaveRoom\");\n  }\n}\n\nexport const prepare = (socket, roomid) => {\n  return (dispatch) => {\n    socket.socket.emit(\"prepare\", roomid);\n  }\n}","import { TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport Socket from \"../utils/socket\";\nimport { sendMessage } from \"../store/actions/room\";\nimport \"./ChatContainer.css\";\nimport { useDispatch } from \"react-redux\";\n\nconst ChatContainer = (props) => {\n  const [guessText, setGuessText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const socket = new Socket();\n\n  const dispatch = useDispatch();\n  const { roomid, isEditing } = props;\n\n  useEffect(() => {\n    socket.socket.on(\"loadMessages\", (data) => {\n      data = JSON.parse(data);\n      setMessages(data);\n    });\n  }, []);\n\n  const textHandler = (e) => {\n    setGuessText(e.target.value);\n  };\n\n  const onEnter = (e) => {\n    if (e.keyCode === 13) {\n      dispatch(sendMessage(socket, roomid, e.target.value));\n      setGuessText(\"\");\n    }\n  };\n\n  const b = [];\n  for (var i = 0; i < 10; i++) b.push(i);\n\n  return (\n    <div className=\"chatarea\">\n      <div className=\"messagesDisplayArea\">\n        {messages.map((v) => {\n          const textColor = v.id === socket.socket.id ? \"pink\" : \"black\";\n          return (\n            <div style={{ display: \"flex\", padding: \"2%\", width: \"95%\" }}>\n              <div\n                style={{\n                  fontSize: \"2.3vh\",\n                  wordBreak: \"break-all\",\n                  border: \"gray solid 0.1px\",\n                  borderRadius: \"10px\",\n                  textAlign: \"left\",\n                  color: textColor,\n                }}\n              >\n                {v.sender + \" : \" + v.message}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"chatInputArea\">\n        <TextField\n          value={guessText}\n          onChange={textHandler}\n          onKeyDown={onEnter}\n        />\n      </div>\n      {isEditing ? (\n        <div className=\"inputOverLay\">\n          <div>You are drawing..</div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ChatContainer;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst CustomButton = (props) => {\n  return (\n    <Button\n      variant=\"contained\"\n      style={{\n        backgroundColor: props.backgroundColor,\n        width: props.width,\n        height: props.height,\n        borderRadius: \"30px\",\n        border: props.border || \"solid gray\",\n        borderWidth: \"2px 2px\",\n      }}\n\n      onClick={props.onClick}\n    >\n      {props.children}\n    </Button>\n  );\n};\n\nexport default CustomButton\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport PlayerCard from \"../components/PlayCard\";\nimport DrawingPad from \"../components/DrawingPad\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport Socket from \"../utils/socket\";\nimport { useHistory } from \"react-router\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport {\n  startGame,\n  GAME_STATE,\n  ROUND_STATE,\n  onDraw,\n  leaveRoom,\n  prepare,\n} from \"../store/actions/room\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomButton from \"../components/CustomButton\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport \"../App.css\";\n\nconst HomeScreen = (props) => {\n  // const [players, setPlayers] = useState([]);\n  const [initialValue, setInitialValue] = useState(\n    localStorage.getItem(\"1111\") || null\n  );\n  const [gameState, setGameState] = useState(\"waiting\");\n  const [timeLeft, setTimeLeft] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [backDrop, setBackDrop] = useState(false);\n\n  const socket = Socket.getInstance();\n  const dispatch = useDispatch();\n\n  const drawingPadRef = useRef();\n  const selectedRoom = useSelector((state) => {\n    return state.room.currentIn;\n    // return state.room.room.find((v) => v.id === props.location.state.roomid);\n  });\n\n  const history = useHistory();\n  // update board\n\n  useEffect(() => {\n    socket.socket.on(\"onDraw\", (data) => {\n      setInitialValue(data);\n    });\n  });\n\n  // check for room status\n  useEffect(() => {\n    socket.socket.on(\"roomPlaying\", (data) => {\n      data = JSON.parse(data);\n      if (data.state === GAME_STATE.PREPARE) {\n        setGameState(\"waiting\");\n      } else if (data.state === GAME_STATE.INGAME) {\n        switch (data.round_state) {\n          case ROUND_STATE.PREPARE:\n            setGameState(\"preparing:\");\n            setTimeLeft(data.prepare);\n            setIsEditing(\n              data.currentEditing === socket.socket.id\n            );\n\n            drawingPadRef.current && drawingPadRef.current._clear();\n            break;\n          case ROUND_STATE.DRAWING:\n            setGameState(\"drawing:\");\n            setTimeLeft(data.roundTimer);\n            setIsEditing(\n              data.currentEditing === socket.socket.id\n            );\n            break;\n          default:\n            break;\n        }\n      } else if ((data.state = GAME_STATE.FINISH)) {\n        setGameState(\"waiting\");\n        setTimeLeft(\"\");\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onStart = () => {\n    dispatch(startGame(socket, props.location.state.roomid));\n  };\n\n  const onPrepare = () => {\n    dispatch(prepare(socket, props.location.state.roomid));\n  };\n  const onExit = async () => {\n    setBackDrop(true);\n    dispatch(leaveRoom(socket));\n    await new Promise((resolve) => {\n      setTimeout(() => {\n        history.goBack();\n        resolve(setBackDrop(false));\n      }, 800);\n    });\n  };\n\n  const _onDraw = (drawings) => {\n    dispatch(onDraw(socket, props.location.state.roomid, drawings));\n  };\n  const PrepareContainer = () => {\n    let currentUser = null;\n    let isOwner = null;\n    if (selectedRoom) {\n      currentUser = selectedRoom.players.find(\n        (v) => v && v.id === socket.socket.id\n      );\n      isOwner = selectedRoom.owner === socket.socket.id;\n    }\n\n    return (\n      <div className=\"prepareContainer\">\n        {\" \"}\n        <CustomButton\n          backgroundColor=\"#00FF00\"\n          width=\"46%\"\n          height=\"70%\"\n          onClick={isOwner ? onStart : onPrepare}\n        >\n          {isOwner ? (\n            \"Start\"\n          ) : currentUser && currentUser.prepare ? (\n            <div>\n              <CheckIcon style={{ fontSize: 60, color: \"orange\" }} />\n              <div\n                style={{\n                  opacity: 0.6,\n                  position: \"absolute\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  top: \"50%\",\n                }}\n              >\n                ready\n              </div>\n            </div>\n          ) : (\n            <div style={{ position: \"relative\" }}>\n              <div\n                style={{\n                  position: \"absolute\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  top: \"50%\",\n                }}\n              >\n                prepare\n              </div>\n            </div>\n          )}\n        </CustomButton>\n        <CustomButton\n          backgroundColor=\"red\"\n          width=\"46%\"\n          height=\"70%\"\n          onClick={onExit}\n        >\n          Exit\n        </CustomButton>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Backdrop style={{ zIndex: 10 }} open={backDrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <div className=\"player-container\">\n        <PrepareContainer />\n        {selectedRoom &&\n          selectedRoom.players.map((val) => {\n            if (val === null) return <PlayerCard name={\"EMPTY\"} />;\n            else\n              return (\n                <PlayerCard\n                  key={val.id}\n                  name={val.name}\n                  isEditing={val.isEditing}\n                  score={\"score: \" + val.points}\n                />\n              );\n          })}\n      </div>\n\n      <div className=\"game-container\">\n        <DrawingPad\n          ref={drawingPadRef}\n          initialValue={initialValue}\n          onDraw={_onDraw}\n          isEditing={isEditing}\n          roomid={props.location.state.roomid}\n        />\n      </div>\n      <div className=\"chat-container\">\n        <div className=\"globalTimer\">\n          <p>{gameState}</p>\n          <p style={{ color: \"yellowgreen\" }}>{timeLeft}</p>\n        </div>\n        <ChatContainer\n          isEditing={isEditing}\n          roomid={props.location.state.roomid}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","class Room {\n  static GAME_STATE = {\n    PREPARE: \"PREPARE\",\n    INGAME : \"INGAME\"\n  }\n\n  constructor(id, timeLimit, name, maxPlayer, roomPassord) {\n    this.id = id;\n    this.name = name;\n    this.isPlaying = false;\n    this.timeLimit = timeLimit;\n    this.maxPlayer = maxPlayer;\n    this.players = [null, null, null, null, null];\n    this.totalRound = 0;\n    this.curRound = 0;\n    this.prepare = 20;\n    this.password = roomPassord;\n    this.state = Room.GAME_STATE.prepare\n  }\n\n  // addPlayer = (p) => {\n  //   this.players.forEach((v, i) => {\n  //     if (v === null && !this.isFull) {\n  //       this.players[i] = p;\n  //       return;\n  //     }\n  //   });\n  //   alert(\"this room is full, please go to another one\");\n  // };\n\n  // isFull = () => {\n  //   var total = 5;\n  //   this.players.forEach((v) => {\n  //     if (v === null) {\n  //       total--;\n  //     }\n  //   });\n  //   return total <= this.maxPlayer;\n  // };\n\n  // prepareTimer = async () => {\n  //   return new Promise((resolve) => {\n  //     this.prepare = 5;\n  //     const interval = setInterval(() => {\n  //       this.prepare--;\n  //       //console.log(this.prepare)\n  //       if (this.prepare === 0) {\n  //         clearInterval(interval);\n  //         resolve();\n  //       }\n  //     }, 1000);\n  //   });\n  // };\n\n  // gameTimer = async () => {\n  //   return await new Promise((resolve) => {\n  //     var i = 30;\n  //     const interval = setInterval(() => {\n  //       i++;\n  //       if (i === 34) {\n  //         clearInterval(interval);\n  //         resolve();\n  //       }\n  //     }, 1000);\n  //   });\n  // };\n\n\n  // gameLoop = async () => {\n  //   await this.prepareTimer()\n  //   await this.gameTimer()\n  // }\n\n  // start = async () => {\n  //   this.totalRound = this.players.filter((v) => v != null).length * 2;\n  //   var index = 0;\n  //   while (index < 1) {\n  //     // alert(1)\n  //     await this.gameLoop();\n  //     index++;\n  //   }\n  // };\n\n  // starts = () => {\n  //   this.prepare++;\n  //   console.log(this.prepare)\n  // }\n}\n\nexport default Room;\n","import React, { forwardRef, useImperativeHandle, useRef, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Room from \"../models/Room\";\nimport Socket from \"../utils/socket\";\nimport CustomButton from \"./CustomButton\";\nimport \"./RoomCreateModal.css\";\nimport { Backdrop } from \"@material-ui/core\";\n\nconst timeRange = [60, 70, 80, 90, 100];\nconst personLimits = [2, 3, 4, 5];\n\nconst RoomCreateModal = forwardRef((props, ref) => {\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomPassord, setRoomPassword] = useState(\"\");\n  const [timeLimit, setTimeLimit] = useState(timeRange[0]);\n  const [personLimit, setPersonLimit] = useState(personLimits[0]);\n  const [isShow, setIsShow] = useState(false);\n  const [promiseInfo, setPromiseInfo] = useState(null);\n  const socket = new Socket().socket;\n\n  const roomNameHandler = (e) => {\n    setRoomName(e.target.value);\n  };\n\n  const roomPasswordHandler = (e) => {\n    setRoomPassword(e.target.value);\n  };\n  const timeLimitHandler = (e) => {\n    setTimeLimit(e.target.value);\n  };\n\n  const personLimitHandler = (e) => {\n    setPersonLimit(e.target.value);\n  };\n\n  useImperativeHandle(ref, () => ({\n    show: async () => {\n      return new Promise((resolve, reject) => {\n        setIsShow(true);\n        setPromiseInfo({ resolve, reject });\n      });\n    },\n  }));\n\n  const createHandler = () => {\n    let room = new Room(\n      socket.id,\n      timeLimit,\n      roomName,\n      personLimit,\n      roomPassord\n    );\n    setIsShow(false);\n    promiseInfo.resolve(room);\n  };\n\n  const cancelHandler = () => {\n    setIsShow(false);\n    promiseInfo.reject();\n  };\n\n  return (\n    <Backdrop open={isShow} style={{ zIndex: 20 }}>\n    <div\n      className=\"roomcreatemodal-container\"\n      style={{ display: \"flex\"  }}\n      ref={ref}\n    >\n      <div className=\"room-input\">\n        <TextField\n          id=\"room-name\"\n          label=\"Room Name\"\n          value={roomName}\n          onChange={roomNameHandler}\n        />\n      </div>\n      <div className=\"room-input\">\n        <TextField\n          id=\"room-password\"\n          label=\"Room Password\"\n          placeholder=\"leave empty if no\"\n          value={roomPassord}\n          onChange={roomPasswordHandler}\n        />\n      </div>\n      <div className=\"room-input\">\n        <TextField\n          id=\"room-time-limit\"\n          select\n          label=\"Timie Limit\"\n          value={timeLimit}\n          onChange={timeLimitHandler}\n          helperText=\"Select time limit\"\n        >\n          {timeRange.map((v) => (\n            <MenuItem key={v + \" seconds\"} value={v}>\n              {v + \" seconds\"}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"room-input\">\n        <TextField\n          id=\"room-time-limit\"\n          select\n          label=\"Timie Limit\"\n          value={personLimit}\n          onChange={personLimitHandler}\n          helperText=\"Select person limits \"\n        >\n          {personLimits.map((v) => (\n            <MenuItem key={v + \" persons\"} value={v}>\n              {v}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n\n      <div\n        className=\"create-button-container\"\n        style={{ height: \"13.5\", width: \"75\" }}\n      >\n        <CustomButton\n          backgroundColor=\"red\"\n          height=\"100%\"\n          border=\"solid #f7d9d9\"\n          onClick={cancelHandler}\n        >\n          cancel\n        </CustomButton>\n\n        <CustomButton\n          backgroundColor=\"#f9f3f3\"\n          height=\"100%\"\n          border=\"solid gray\"\n          onClick={createHandler}\n        >\n          create\n        </CustomButton>\n      </div>\n    </div>\n    </Backdrop>\n  );\n});\n\nconst PasswordCompareModal = forwardRef((props, ref) => {\n  const [password, setPassword] = useState(\"\");\n  const [isShow, setIsShow] = useState(false);\n  const [promiseInfo, setPromiseInfo] = useState(null);\n\n  const roomPasswordHandler = (e) => {\n    setPassword(e.target.value);\n  };\n\n  useImperativeHandle(ref, () => ({\n    show: async () => {\n      return new Promise((resolve, reject) => {\n        setIsShow(true);\n        setPromiseInfo({ resolve, reject });\n      });\n    },\n  }));\n\n  const cancelHandler = () => {\n    setIsShow(false);\n    promiseInfo.reject();\n  };\n\n  const joinRoom = () => {\n    setIsShow(false);\n    promiseInfo.resolve(password);\n  }\n\n\n  return (\n    <Backdrop open={isShow} style={{ zIndex: 20 }}>\n      <div\n        className=\"roomcreatemodal-container\"\n        style={{ display: \"flex\", height: \"30%\" }}\n      >\n        <div className=\"room-input\" style={{ height: \"22%\", marginTop:'10%'}}>\n          <TextField\n            id=\"room-password\"\n            label=\"Enter Password\"\n            type=\"password\"\n            value={password}\n            onChange={roomPasswordHandler}\n          />\n        </div>\n        <div\n          className=\"create-button-container\"\n          style={{ height: \"15%\", width: \"75\", gap: \"20%\" }}\n        >\n          <CustomButton\n            backgroundColor=\"red\"\n            height=\"100%\"\n            border=\"solid #f7d9d9\"\n            onClick={cancelHandler}\n          >\n            cancel\n          </CustomButton>\n\n          <CustomButton\n            backgroundColor=\"#f9f3f3\"\n            height=\"100%\"\n            border=\"solid gray\"\n            onClick={joinRoom}\n          >\n            JOIN\n          </CustomButton>\n        </div>\n      </div>\n    </Backdrop>\n  );\n});\n\nexport { RoomCreateModal, PasswordCompareModal };\n","export default __webpack_public_path__ + \"static/media/draingPad.aedcfbb4.png\";","export default __webpack_public_path__ + \"static/media/draingPadBW.2f644edf.png\";","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Room from \"../models/Room\";\nimport draingPad from \"../assets/draingPad.png\";\nimport draingPadBW from \"../assets/draingPadBW.png\";\nimport \"./Table.css\";\nconst Table = (props) => {\n  const { joinHandler, gameState, players, roomName } = props;\n  const disabled = gameState === Room.GAME_STATE.INGAME;\n  const topPlayer = players.slice(0, 2);\n  const bottomPlayer = players.slice(2, 5);\n\n  const isLock = false\n\n  const Seat = (props) => {\n    return (\n      <div\n        className={props.className}\n        style={{\n          backgroundImage: `url(${props.v === null ? draingPadBW : draingPad})`,\n          cursor: props.v === null ? \"pointer\" : \"\",\n        }}\n        onClick={props.v !== null ? () => {} : joinHandler}\n      ></div>\n    );\n  };\n\n  return (\n    <div\n      className=\"round-table\"\n      style={{ width: props.width, height: props.height }}\n    >\n      <div\n        id=\"lock\"\n        style={{\n          textAlign: \"center\",\n          position: \"absolute\",\n          top: 0,\n          width: \"100%\",\n          textAlign: \"center\",\n          display:isLock ? \"\":\"none\"\n        }}\n      >\n        <b>🔒</b>\n      </div>\n      <div className=\"round-table-top\">\n        {topPlayer.map((v) => (\n          <Seat v={v} className=\"child-table\" />\n        ))}\n      </div>\n      <div className=\"round-table-bottom\">\n        {bottomPlayer.map((v) => (\n          <Seat v={v} className=\"child-table-bottom\" />\n        ))}\n      </div>\n      <Button\n        variant=\"contained\"\n        style={{\n          backgroundColor: disabled ? \"red\" : \"#00FF00\",\n          width: \"40%\",\n          height: \"15%\",\n          borderRadius: \"30px\",\n          borderWidth: \"2px 2px\",\n          left: \"50%\",\n          top: \"90%\",\n          transform: \"translateX(-50%) translateY(-100%)\",\n          display: \"inline\",\n          fontSize: 10,\n          color: \"black\",\n        }}\n        disabled={disabled}\n        onClick={joinHandler}\n      >\n        {disabled ? \"IN-GAME \" : \"JOIN\"}\n      </Button>\n\n      <div\n        style={{\n          color: \"lightgray\",\n          position: \"absolute\",\n          bottom: \"-13%\",\n          width: \"100%\",\n          textAlign: \"center\",\n        }}\n      >\n        <b> {roomName === \"\" ? \"gameRoom\" : roomName}</b>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tables from \"@material-ui/core/Table\";\nimport CustomButton from \"./CustomButton\";\nimport \"../App.css\";\nconst LobbyInfoContainer = (props) => {\n\n  const [aButtonText, setAButtonText] = useState(\"available rooms\")\n  const { createRoom, players, showAvailableRooms } = props;\n\n\n  const columns = [\n    { id: \"name\", label: \"Name\", minWidth: 120 },\n    {\n      id: \"id\",\n      label: \"ID\",\n      minWidth: 270,\n      align: \"left\",\n    },\n  ];\n  return (\n    <div className=\"info-container\">\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"2%\",\n          textAlign: \"center\",\n          width: \"80%\",\n        }}\n      >\n        <b>total players: {players.length}</b>\n      </div>\n      <div className=\"players-info\">\n        <TableContainer style={{ minHeight: \"100%\" }}>\n          <Tables stickyHeader aria-label=\"sticky table\" size=\"small\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {players.map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Tables>\n        </TableContainer>\n      </div>\n      <div className=\"lobby-button-groups\">\n        <CustomButton\n          backgroundColor=\"lightblue\"\n          width=\"80%\"\n          onClick={createRoom}\n        >\n          New Room\n        </CustomButton>\n        <CustomButton\n          backgroundColor=\"lightblue\"\n          width=\"80%\"\n          onClick={() => {showAvailableRooms(); setAButtonText(e => e === \"available rooms\" ? \"all rooms\" : \"available rooms\" )}}\n        >\n          {aButtonText}\n        </CustomButton>\n      </div>\n    </div>\n  );\n};\n\nexport default LobbyInfoContainer;\n","export const GET_ALL_PLAYERS = \"GET_ALL_PLAYERS\";\n\n\nexport const getAllPlayers = (players) => {\n  return {\n    type: GET_ALL_PLAYERS,\n    players: players,\n  };\n};","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  RoomCreateModal,\n  PasswordCompareModal,\n} from \"../components/RoomCreateModal\";\nimport Table from \"../components/Table\";\nimport Socket from \"../utils/socket\";\nimport {\n  getAllRoom,\n  createNewRoomSocket,\n  getAllRoomsSocket,\n  jointRoom,\n} from \"../store/actions/room\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useHistory } from \"react-router\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LobbyInfoContainer from \"../components/LobbyInfoContainer\";\nimport { getAllPlayers, GET_ALL_PLAYERS } from \"../store/actions/player\";\nimport { Snackbar } from \"@material-ui/core\";\n// tables\n\nconst GameLobbyScreen = (props) => {\n  const modalRef = useRef();\n  const passwordModalRef = useRef();\n  const [backDrop, setBackDrop] = useState(false);\n  const [showAvailableRooms, setShowAvailableRooms] = useState(false);\n  const [cancel, setCancel] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const socket = Socket.getInstance();\n  const allRooms = useSelector((state) => {\n    if (showAvailableRooms) {\n      return state.room.room.filter((v) => !v.isPlaying);\n    }\n    return state.room.room;\n  });\n\n  console.log(allRooms);\n\n  const allPlayers = useSelector((state) => state.players.players);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    socket.socket.on(\"allRooms\", (rooms) => {\n      rooms = JSON.parse(rooms);\n      dispatch(getAllRoom(rooms));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    socket.socket.on(\"jointRoom\", (room) => {\n      room = JSON.parse(room);\n      dispatch(jointRoom(room));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    socket.socket.on(\"allPlayers\", (player) => {\n      player = JSON.parse(player);\n      console.log(player);\n      dispatch(getAllPlayers(player));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const waitJoinRoom = async (createdRoom) => {\n    setBackDrop(true);\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        dispatch(createNewRoomSocket(socket, createdRoom));\n        resolve(setBackDrop(false));\n      }, 800);\n    });\n  };\n  const createRoom = async () => {\n    const modal = modalRef.current;\n    setTimeout(async () => {\n      try {\n        const result = await modal.show();\n        let createdRoom = {\n          id: uuidv4(),\n          name: result.name,\n          timeLimit: result.timeLimit,\n          maxPlayer: result.maxPlayer,\n          password: result.password,\n        };\n\n        await waitJoinRoom(createdRoom);\n        history.push(`/gameroom/${createdRoom.id}`, {\n          roomid: createdRoom.id,\n        });\n      } catch (err) {\n        console.log(err);\n        setCancel(true);\n        setSnackBarMessage(\"cancel\");\n        await new Promise((resolve) =>\n          setTimeout(() => resolve(setCancel(false)), 800)\n        );\n      }\n    }, 100);\n  };\n\n  const joinRoom = async (id) => {\n    let createdRoom = allRooms.find((v) => v.id === id);\n    if (createdRoom.curPlayers < createdRoom.maxPlayer) {\n      // compare password\n      if (createdRoom.password !== \"\") {\n        try {\n          var result = await passwordModalRef.current.show();\n          while (result !== createdRoom.password) {\n            setSnackBarMessage(\"wrong password\");\n            setCancel(true);\n            setTimeout(() => setCancel(false), 800);\n            result = await passwordModalRef.current.show();\n\n          }\n        } catch (err) {\n          setSnackBarMessage(\"cancel\");\n          setCancel(true);\n          await new Promise((resolve) =>\n            setTimeout(() => resolve(setCancel(false)), 800)\n          );\n          return;\n        }\n      }\n\n      await waitJoinRoom(createdRoom);\n      history.push(`gameroom/${id}`, { roomid: createdRoom.id });\n    } else {\n      alert(\"room is full\");\n    }\n  };\n\n  const renderRoom = () => {\n    for (var i = 0; i < allRooms.length; i++) {\n      const rrrrr = allRooms[i];\n      if (rrrrr !== null) {\n        rooms.push(\n          <Table\n            key={i + \"13132\"}\n            height={200}\n            width={200}\n            joinHandler={() => joinRoom(rrrrr.id)}\n            players={rrrrr.players}\n            gameState={rrrrr.state}\n            roomName={rrrrr.name}\n          ></Table>\n        );\n      }\n    }\n  };\n  var rooms = [];\n  renderRoom();\n  useEffect(() => {\n    renderRoom();\n  }, [allRooms]);\n\n  // initialize all rooms\n  useEffect(() => {\n    dispatch(getAllRoomsSocket(socket));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"container\" id=\"lobby\">\n      <PasswordCompareModal ref={passwordModalRef} />\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={cancel}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\",\n        }}\n        message={<span id=\"message-id\">{snackBarMessage}</span>}\n      />\n      <Backdrop style={{ zIndex: 20 }} open={backDrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <RoomCreateModal ref={modalRef} />\n      <div className=\"tables-container\">{rooms}</div>\n      <LobbyInfoContainer\n        createRoom={createRoom}\n        players={allPlayers}\n        showAvailableRooms={() => setShowAvailableRooms((e) => !e)}\n      />\n    </div>\n  );\n};\n\nexport default GameLobbyScreen;\n","import { GET_ALL_ROOM, JOIN_ROOM } from \"../actions/room\";\nimport { ROOMS } from \"../dummy-data\";\n\nconst initialState = {\n  room: ROOMS,\n  currentIn: null,\n};\n\nconst roomReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_ROOM:\n      return { ...state, room: action.rooms };\n    case JOIN_ROOM:\n      return { ...state, currentIn: action.room };\n    default:\n      return state;\n  }\n};\n\nexport default roomReducer;\n","\nimport Room from \"../models/Room\";\nlet room2 = new Room(\"21313\", 60, \"aad\", 2);\nexport const ROOMS = [room2];\n","import {GET_ALL_PLAYERS} from \"../actions/player\";\n\n\nconst initialState = {\n  players: [],\n};\n\nconst playerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_PLAYERS:\n      return { ...state, players: action.players };\n    default:\n      return state\n  }\n};\n\nexport default playerReducer","import \"./App.css\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Socket from \"./utils/socket\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport GameLobbyScreen from \"./screens/GameLobbyScreen\";\nimport RoomCreateModal from \"./components/RoomCreateModal\";\nimport thunk from \"redux-thunk\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport roomReducer from \"./store/reducers/room\";\n\n// import socket io\n\nimport \"./App.css\";\n\n// If you are using v7 or any earlier version of the JS SDK, you should import firebase using namespace import\n// import * as firebase from \"firebase/app\"\n\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\nimport \"firebase/analytics\";\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport playerReducer from \"./store/reducers/player\";\n\nvar mysocket = new Socket();\nmysocket.onConnect(111);\n\nconst rootReducer = combineReducers({\n  room: roomReducer,\n  players: playerReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"mainContainer\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/lobby\" />\n            </Route>\n            <Route exact path=\"/lobby\" component={GameLobbyScreen} />\n            <Route\n              path={`/gameroom/:id`}\n              render={(props) => {\n                return <HomeScreen {...props} />;\n              }}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Firebase App (the core Firebase SDK) is always required and must be listed first\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}